#!/bin/bash

#PBS -l nodes=1:ppn=8,vmem=40gb,walltime=8:00:00
#PBS -N NODDI_AMICO
#PBS -V

module load singularity 2> /dev/null

dwi=`jq -r '.dwi' config.json`;
otherMask=`jq -r '.mask' config.json`;
advancedMask=`jq -r '.advancedMask' config.json`;
dPar=`jq -r '.dPar' config.json`

[ -d ./NODDI ] && rm -rf NODDI kernels

mkdir -p NODDI noddi mask

# create brainmask
if [ $otherMask == "null" ] && [ $advancedMask == false ]; then
	singularity exec -e docker://brainlife/fsl:5.0.9 ./brainmask.sh
elif [ $otherMask != "null" ] && [ $advancedMask == true ]; then
	singularity exec -e docker://brainlife/fsl:5.0.9 ./brainmask.sh
elif [ $otherMask != "null" ] && [ $advancedMask == false ]; then
	export otherMaskNifti=$otherMask;
	cp -v $otherMaskNifti ./nodif_brain_mask.nii.gz;
fi

# move files to appropriate directories
[ ! -s nodif_brain_mask.nii.gz ] && echo "output missing" && exit 1
[ ! -f NODDI/nodif_brain_mask.nii.gz ] && cp -v nodif_brain_mask.nii.gz NODDI/
[ ! -f mask.nii.gz ] && mv nodif_brain_mask.nii.gz mask.nii.gz
[ ! -f NODDI/dwi.bvals ] && singularity exec -e docker://python:3 ./round_b.py
[ ! -f NODDI/dwi.nii.gz ] && cp -v ${dwi} NODDI/dwi.nii.gz;

# NODDI via AMICO
dPar=`jq -r '.dPar' config.json`
export SINGULARITYENV_PYTHONNOUSERSITE=true 
singularity exec -e docker://brainlife/amico:2.1b ./NODDI.py

# set appropriate header fields that AMICO neglects
singularity exec -e docker://brainlife/mcr:neurodebian1604-r2017a ./compiled/main

##rename to brainlife noddi datatype filenames
[ ! -f ./noddi/ndi.nii.gz ] && mv NODDI/AMICO/NODDI/FIT_ICVF_NEW.nii.gz ./noddi/ndi.nii.gz;
[ ! -f ./noddi/isovf.nii.gz ] && mv NODDI/AMICO/NODDI/FIT_ISOVF_NEW.nii.gz ./noddi/isovf.nii.gz;
[ ! -f ./noddi/odi.nii.gz ] && mv NODDI/AMICO/NODDI/FIT_OD_NEW.nii.gz ./noddi/odi.nii.gz;
[ ! -f ./noddi/dir.nii.gz ] && mv NODDI/AMICO/NODDI/FIT_dir.nii.gz ./noddi/dir.nii.gz;
[ ! -f ./mask/mask.nii.gz ] && mv mask.nii.gz ./mask/mask.nii.gz;

#clean up
if [ -f ./noddi/ndi.nii.gz ]; then
	rm -rf ./NODDI *nodif* ./kernels;
	echo "{\"tags\": [\"${dPar}\" ]}" > product.json
	echo "NODDI AMICO complete"
	exit 0
else
	echo "NODDI AMICO failed"
	exit 1
fi
